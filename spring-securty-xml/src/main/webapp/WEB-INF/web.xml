<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" 
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
						https://java.sun.com/xml/ns/javaee/web-app_3_1.xsd">
	
	<!-- #3. 공용 applicationContext관련 설정파일에 security-context.xml 추가 -->
	<!--  /WEB-INF/spring/*-context.xml 와 같이 wildcard 사용가능 -->
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/application-context.xml
			/WEB-INF/spring/security-context.xml
		</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 사용자 요청 url에 대한 ServletContext관련 설정 -->
	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- post방식 인코딩 설정 UTF-8 필터 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param> 
	       <param-name>forceEncoding</param-name> 
	       <param-value>true</param-value> 
    	</init-param> 
	</filter>
  	<filter-mapping>
  		<filter-name>encodingFilter</filter-name>
  		<url-pattern>/*</url-pattern>
  	</filter-mapping>
  	
  	<!-- #2. Spring Security Filter 등록 --> 
  	<!-- 
  		1. DelegatingFilterProxyRegistrationBean이 DelegatingFilterProxy필터클래스를 "springSecurityFilterChain"이라는 이름의 Filter로 등록
  			- legacy project에서는 web.xml에서 DelegatingFilterProxy필터  등록시 application-context에 빈으로 등록됨.
		2. DelegatingFilterProxy클래스는 FilterChainProxy 클래스에게 처리를 위임 
			- FilterChainProxy는 AuthenticationFilter 들을 리스트로 보관하고 있는 클래스 
  	 -->
  	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  	
	

</web-app>
