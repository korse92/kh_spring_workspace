<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!--  기본 namespace security로 설정  -->
	
	<!-- #4. 패스워드암호화관련 빈등록 -->
	<beans:bean id="bcryptPasswordEncoder"
				class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- #5. 정적자원 요청은 security 인증/인가에서 제외한다. -->			
	<http security="none" pattern="/resources/**"/>
	
	<!-- #6. HttpSecurity 설정 -->
	<http auto-config="true">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/index.jsp" access="permitAll" /> <!-- forwarding 하는 path도 등록함. -->
		<intercept-url pattern="/member/memberLogin.do" access="isAnonymous()" />
		<intercept-url pattern="/member/**" access="isAuthenticated()"/>
		<intercept-url pattern="/board/**" access="hasRole('USER')"/>
	    <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />	    
	    <intercept-url pattern="/**" access="isAuthenticated()" />
	    
	    <!-- login-page="/member/memberLogin.do" GET 로그인폼페이지   -->
        <!-- login-processing-url="/member/memberLogin.do" POST 로그인폼 제출 url. 이 속성은 반드시 작성하되, 이를 처리할 핸들러메소드는 작성할 필요없음.-->
	    <!-- default-target-url="/" 로그인성공후 redirect url. 지정하지 않으면, 자동으로 root -->
	    <!-- always-use-default-target="false" 로그인전 접근 페이지로 리다이렉트 설정(default-target-url을 override함.) -->
	    <!-- authentication-success-forward-url="/member/memberLoginSuccess.do" 를 등록해 로그인 성공후 처리로직 작성가능 -->
		<form-login login-page="/member/memberLogin.do"
					login-processing-url="/member/memberLogin.do"
					default-target-url="/"
					always-use-default-target="false"  
					username-parameter="id" 
					password-parameter="password"
					/>
					
        <!-- logout-url은 로그아웃 POST 요청할 url로 핸들러 메소드 작성불필요 -->
        <!-- invalidate-session="true" 기본값 true -->
        <!-- logout-success-url="/" 기본값 /login?logout-->
		<logout logout-url="/member/memberLogout.do"
				invalidate-session="true"
				delete-cookies="JSESSIONID"
				logout-success-url="/"/>
				
		<!-- remember me 설정 -->
		<remember-me  
			data-source-ref="dataSource" 
			token-validity-seconds="1209600"/> <!-- 초단위 기입 2419200 (60*60*24*14 : 4 주) -->

		<!-- 접근권한이 없는 경우, forwarding할 url -->
		<access-denied-handler error-page="/error/accessDenied.do"/>
		
		<!-- csrf[disabled=false] 기본값. 모든 post요청은 csrf토큰 값을 인증해야 한다. -->
	    <csrf disabled="false"/>
	</http>
	
	<authentication-manager>
		<!-- UserDetailsService 구현체. 같은 application-context에 등록된 빈이어야 함. -->
		<authentication-provider user-service-ref="securityService" >			
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<!-- com.kh.security 패키지 빈으로 등록 -->
	<!-- application-context에 등록된 빈으로 servlet-context의 빈은 참조불가하다. -->
	<context:component-scan base-package="com.kh.security"/>

</beans:beans>
